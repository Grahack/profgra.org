<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>info/lang/python on</title><link>https://grahack.github.io/profgra.org/tags/info/lang/python/</link><description>Recent content in info/lang/python on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://grahack.github.io/profgra.org/tags/info/lang/python/index.xml" rel="self" type="application/rss+xml"/><item><title>Activité rapide du monstre</title><link>https://grahack.github.io/profgra.org/AR-monstre/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://grahack.github.io/profgra.org/AR-monstre/</guid><description>Écrire une classe qui passe les tests suivants:
1 2 3 4 5 6 7 8 &amp;gt;&amp;gt;&amp;gt; m = Monstre(18) # nombre de têtes &amp;gt;&amp;gt;&amp;gt; m.</description></item><item><title>Activité rapide: listes aléatoires</title><link>https://grahack.github.io/profgra.org/AR-listes-aleatoires/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://grahack.github.io/profgra.org/AR-listes-aleatoires/</guid><description>Rappels Nombres aléatoires 1 2 import random random.randint(1, 6) # génère un nombre aléatoire entre 1 et 6 compris Ajouter (concaténation) une valeur à une liste 1 L.</description></item><item><title>Comment utiliser Python</title><link>https://grahack.github.io/profgra.org/Comment-utiliser-Python/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://grahack.github.io/profgra.org/Comment-utiliser-Python/</guid><description>Logiciels Si vous préférez travailler en ligne de commande pure, vous n’aurez pas besoin de cet article. Dans le cas contraire vous aurez installé:</description></item><item><title>Itérateur</title><link>https://grahack.github.io/profgra.org/It%C3%A9rateur/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://grahack.github.io/profgra.org/It%C3%A9rateur/</guid><description>Définir une classe pour des objets de type «itérateur» (comme un compteur).
On doit pouvoir fournir au constructeur un nombre noté n, et l’objet aura une méthode prochain qui ne prend pas d’argument mais retourne tour à tour les nombres 0, puis 1, puis 2… jusqu’à n.</description></item><item><title>Le jeu des allumettes</title><link>https://grahack.github.io/profgra.org/Le-jeu-des-allumettes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://grahack.github.io/profgra.org/Le-jeu-des-allumettes/</guid><description>Jouer Utilisation d&amp;rsquo;un éditeur de code, par ex [[Idle]]. Charger le fichier et l&amp;rsquo;exécuter.
![[py/allumettes.py]]
Les plus rapides peuvent commencer à lire et commenter le code.</description></item><item><title>Listes de nombres</title><link>https://grahack.github.io/profgra.org/Listes-de-nombres/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://grahack.github.io/profgra.org/Listes-de-nombres/</guid><description>Listes de nombres Nombres consécutifs Écrire une instruction ou une suite d’instructions qui affiche les nombres entiers de 1 à 20, chacun sur une ligne.</description></item><item><title>Puissance fiscale sur Mars</title><link>https://grahack.github.io/profgra.org/Puissance-fiscale-sur-Mars/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://grahack.github.io/profgra.org/Puissance-fiscale-sur-Mars/</guid><description>Sur Mars, on calcule la puissance fiscale des véhicules avec le produit $n×mˆ2$, où:
$n$ est le nombre de roues du véhicule, $m$ est la masse du véhicule en tonnes.</description></item><item><title>Python</title><link>https://grahack.github.io/profgra.org/Python/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://grahack.github.io/profgra.org/Python/</guid><description> [[Comment utiliser Python]] [[Pour quoi utiliser Python]] [[Vocabulaire minimal en Python]] [[range]]</description></item><item><title>range</title><link>https://grahack.github.io/profgra.org/range/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://grahack.github.io/profgra.org/range/</guid><description>Les réponses données par la console ont été simplifiées (les generators ou iterators sont donnés sous forme de list).
1 2 3 4 5 6 &amp;gt;&amp;gt;&amp;gt; range(3) [0, 1, 2] &amp;gt;&amp;gt;&amp;gt; range(3, 6) [3, 4, 5] &amp;gt;&amp;gt;&amp;gt; range(3, 9, 2) [3, 5, 7]</description></item><item><title>Vocabulaire minimal en Python</title><link>https://grahack.github.io/profgra.org/Vocabulaire-minimal-en-Python/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://grahack.github.io/profgra.org/Vocabulaire-minimal-en-Python/</guid><description>En seconde &amp;hellip;
En STS SIO &amp;hellip;</description></item></channel></rss>