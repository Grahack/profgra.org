<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>peda/actrapide on</title><link>https://grahack.github.io/profgra.org/tags/peda/actrapide/</link><description>Recent content in peda/actrapide on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://grahack.github.io/profgra.org/tags/peda/actrapide/index.xml" rel="self" type="application/rss+xml"/><item><title>Activité rapide du monstre</title><link>https://grahack.github.io/profgra.org/AR-monstre/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://grahack.github.io/profgra.org/AR-monstre/</guid><description>Écrire une classe qui passe les tests suivants:
1 2 3 4 5 6 7 8 &amp;gt;&amp;gt;&amp;gt; m = Monstre(18) # nombre de têtes &amp;gt;&amp;gt;&amp;gt; m.</description></item><item><title>Activité rapide sur les tris de dictionnaires</title><link>https://grahack.github.io/profgra.org/AR_tri_dict/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://grahack.github.io/profgra.org/AR_tri_dict/</guid><description>On considère une liste de dictionnaires : 1 2 L = [{&amp;#34;prenom&amp;#34;: &amp;#34;arthur&amp;#34;, &amp;#34;nom&amp;#34;: &amp;#34;truc&amp;#34;}, &amp;#34;prenom&amp;#34;: &amp;#34;john&amp;#34;, &amp;#34;nom&amp;#34;: &amp;#34;bidule&amp;#34;}] Que vaut sorted(L) ?</description></item><item><title>Activité rapide « lettre dans un texte »</title><link>https://grahack.github.io/profgra.org/AR-lettre-dans-un-texte/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://grahack.github.io/profgra.org/AR-lettre-dans-un-texte/</guid><description> présence de la lettre &amp;ldquo;a&amp;rdquo; dans un texte nombre de lettres &amp;ldquo;a&amp;rdquo; dans un texte nombre de couples de &amp;ldquo;a&amp;rdquo; consécutifs dans un texte nombre maximum de &amp;ldquo;a&amp;rdquo; consécutifs dans un texte</description></item><item><title>Itérateur</title><link>https://grahack.github.io/profgra.org/It%C3%A9rateur/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://grahack.github.io/profgra.org/It%C3%A9rateur/</guid><description>Définir une classe pour des objets de type «itérateur» (comme un compteur).
On doit pouvoir fournir au constructeur un nombre noté n, et l’objet aura une méthode prochain qui ne prend pas d’argument mais retourne tour à tour les nombres 0, puis 1, puis 2… jusqu’à n.</description></item><item><title>Puissance fiscale sur Mars</title><link>https://grahack.github.io/profgra.org/Puissance-fiscale-sur-Mars/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://grahack.github.io/profgra.org/Puissance-fiscale-sur-Mars/</guid><description>Sur Mars, on calcule la puissance fiscale des véhicules avec le produit $n×mˆ2$, où:
$n$ est le nombre de roues du véhicule, $m$ est la masse du véhicule en tonnes.</description></item><item><title>Xile</title><link>https://grahack.github.io/profgra.org/Xile/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://grahack.github.io/profgra.org/Xile/</guid><description>Un fou a inventé la structure de données Xile.
C’est comme une pile mais qu’on peut transformer en file à la volée en appelant la méthode change (sans argument).</description></item></channel></rss>